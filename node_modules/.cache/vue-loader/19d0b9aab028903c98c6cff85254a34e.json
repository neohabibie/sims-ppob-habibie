{"remainingRequest":"C:\\xampp\\htdocs\\his-ppob-vue2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\his-ppob-vue2\\src\\views\\Profile.vue?vue&type=style&index=0&id=ced23842&scoped=true&lang=css","dependencies":[{"path":"C:\\xampp\\htdocs\\his-ppob-vue2\\src\\views\\Profile.vue","mtime":1757769130840},{"path":"C:\\xampp\\htdocs\\his-ppob-vue2\\node_modules\\css-loader\\dist\\cjs.js","mtime":1757611685071},{"path":"C:\\xampp\\htdocs\\his-ppob-vue2\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1757611687083},{"path":"C:\\xampp\\htdocs\\his-ppob-vue2\\node_modules\\postcss-loader\\src\\index.js","mtime":1757611685430},{"path":"C:\\xampp\\htdocs\\his-ppob-vue2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1757611684910},{"path":"C:\\xampp\\htdocs\\his-ppob-vue2\\node_modules\\vue-loader\\lib\\index.js","mtime":1757611686384}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLnByb2ZpbGUtcGFnZSB7CiAgICBtYXgtd2lkdGg6IDYwMHB4OwogICAgbWFyZ2luOiAwIGF1dG87CiAgICBwYWRkaW5nOiA0MHB4IDIwcHg7CiAgfQogIC5hdmF0YXItd3JhcHBlciB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgfQogIC5hdmF0YXItaW1nIHsKICAgIHdpZHRoOiAxMjBweDsKICAgIGhlaWdodDogMTIwcHg7CiAgICBib3JkZXItcmFkaXVzOiA1MCU7CiAgICBvYmplY3QtZml0OiBjb3ZlcjsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIGJvcmRlcjogM3B4IHNvbGlkICNlZWU7CiAgfQogIC5lZGl0LWljb24gewogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgYm90dG9tOiAwOwogICAgcmlnaHQ6IDA7CiAgICBiYWNrZ3JvdW5kOiAjZmZmOwogICAgYm9yZGVyLXJhZGl1czogNTAlOwogICAgcGFkZGluZzogNXB4OwogICAgZm9udC1zaXplOiAzMHB4OwogICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKICAgIGN1cnNvcjogcG9pbnRlcjsKICB9CiAgLnByb2ZpbGUtZm9ybSB7CiAgICBtYXJnaW4tdG9wOiAzMHB4Owp9Cg=="},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";AA+LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"profile-page text-center\">\r\n    <div class=\"avatar-wrapper\">\r\n      <img :src=\"imgPreview\" class=\"avatar-img\" @click=\"pickFile\" />\r\n      <b-icon-pencil class=\"edit-icon\" @click=\"pickFile\"/>\r\n    </div>\r\n\r\n    <h4 class=\"mt-3\">{{ profile.first_name }} {{ profile.last_name }}</h4>\r\n\r\n    <p class=\"text-muted\">{{ profile.email }}</p>\r\n\r\n    <b-form @submit.prevent=\"saveProfile\" class=\"profile-form mt-4 text-left\">\r\n      <b-form-group label=\"Email\">\r\n        <b-form-input v-model=\"form.email\" type=\"email\" required></b-form-input>\r\n      </b-form-group>\r\n\r\n      <b-form-group label=\"Nama Depan\">\r\n        <b-form-input v-model=\"form.first_name\" required></b-form-input>\r\n      </b-form-group>\r\n\r\n      <b-form-group label=\"Nama Belakang\">\r\n        <b-form-input v-model=\"form.last_name\" required></b-form-input>\r\n      </b-form-group>\r\n\r\n      <b-button type=\"submit\" variant=\"danger\" block>Edit Profil</b-button>\r\n      <b-button variant=\"outline-danger\" block class=\"mt-3\" @click=\"logout\">Logout</b-button>\r\n    </b-form>\r\n\r\n    <input ref=\"file\" type=\"file\" accept=\"image/*\" style=\"display:none\" @change=\"uploadImage\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import api from '../services/api';\r\n  import {\r\n    imageSizeUnder\r\n  } from '../utils/validators';\r\n  export default {\r\n    data() {\r\n      return {\r\n        profile: {},\r\n        form: {},\r\n        editing: false,\r\n        imgPreview: require('../assets/default-avatar.png')\r\n      }\r\n    },\r\n    async created() {\r\n      await this.loadProfile();\r\n    },\r\n    methods: {\r\n      async loadProfile() {\r\n        try {\r\n          const res = await api.get('/profile');\r\n          this.profile = res.data.data || {};\r\n          this.form = {\r\n            first_name: this.profile.first_name,\r\n            last_name: this.profile.last_name,\r\n            email: this.profile.email\r\n          };\r\n          if (this.profile.profile_image) this.imgPreview = this.profile.profile_image;\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      },\r\n\r\n      startEdit() {\r\n        this.editing = true;\r\n      },\r\n\r\n      cancelEdit() {\r\n        this.editing = false;\r\n        this.form = {\r\n          first_name: this.profile.first_name,\r\n          last_name: this.profile.last_name,\r\n          email: this.profile.email\r\n        };\r\n      },\r\n\r\n      pickFile() {\r\n        this.$refs.file.click();\r\n      },\r\n\r\n      async uploadImage(e) {\r\n        const pict = e.target.files[0];\r\n        if (!pict) return;\r\n        if (!imageSizeUnder(pict, 100)) {\r\n          return this.$bvToast.toast('Ukuran file melebihi 100 KB', {\r\n            title: 'Error',\r\n            variant: 'danger',\r\n            autoHideDelay:3000\r\n          });\r\n        }\r\n\r\n        const fd = new FormData();\r\n        fd.append('file', pict);\r\n        try {\r\n          const res = await api.put('/profile/image', fd);\r\n          if (res.data && res.data.status === 0) {\r\n            this.$bvToast.toast('Foto profil berhasil diupdate', {\r\n              title: 'Sukses',\r\n              variant: 'success',\r\n              autoHideDelay:2000\r\n            });\r\n            setTimeout(() => {\r\n              this.loadProfile();\r\n            }, 2000);\r\n          } else {\r\n            this.$bvToast.toast(res.data.message || 'Gagal update foto', {\r\n              title: 'Error',\r\n              variant: 'danger',\r\n              autoHideDelay:3000\r\n            });\r\n          }\r\n        } catch (err) {\r\n          this.$bvToast.toast(\r\n            (err.response && err.response.data && err.response.data.message) || 'Error upload', {\r\n              title: 'Error',\r\n              variant: 'danger',\r\n              autoHideDelay:3000\r\n            });\r\n        }\r\n      },\r\n\r\n      async saveProfile() {\r\n        try {\r\n          const res = await api.put('/profile/update', this.form);\r\n          if (res.data && res.data.status === 0) {\r\n            this.$bvToast.toast('Profile disimpan', {\r\n              title: 'Sukses',\r\n              variant: 'success',\r\n              autoHideDelay: 2000,\r\n            });\r\n            setTimeout(() => {\r\n              this.editing = false;\r\n              this.loadProfile();\r\n            }, 2000);\r\n          } else this.$bvToast.toast(res.data.message || 'Gagal menyimpan', {\r\n            title: 'Error',\r\n            variant: 'danger',\r\n            autoHideDelay:3000\r\n          });\r\n        } catch (e) {\r\n          this.$bvToast.toast('Error menyimpan profile', {\r\n            title: 'Error',\r\n            variant: 'danger',\r\n            autoHideDelay:3000\r\n          });\r\n        }\r\n      },\r\n\r\n      logout() {\r\n        this.$store.dispatch('auth/logout');\r\n        this.$router.push('/login');\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .profile-page {\r\n    max-width: 600px;\r\n    margin: 0 auto;\r\n    padding: 40px 20px;\r\n  }\r\n  .avatar-wrapper {\r\n    position: relative;\r\n    display: inline-block;\r\n  }\r\n  .avatar-img {\r\n    width: 120px;\r\n    height: 120px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    cursor: pointer;\r\n    border: 3px solid #eee;\r\n  }\r\n  .edit-icon {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n    background: #fff;\r\n    border-radius: 50%;\r\n    padding: 5px;\r\n    font-size: 30px;\r\n    border: 1px solid #ddd;\r\n    cursor: pointer;\r\n  }\r\n  .profile-form {\r\n    margin-top: 30px;\r\n}\r\n</style>"]}]}